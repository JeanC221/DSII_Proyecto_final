services:
  mongodb:
    image: mongo:7.0
    container_name: mongodb_logs
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=logs_db
    volumes:
      - mongodb_data:/data/db
    networks:
      - academic-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  rag_service:
    build:
      context: ./llm_service
      dockerfile: Dockerfile  
    ports:
      - "8000:8000"
    environment:
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-proyecto-final-gestordatos}
      - FIREBASE_PRIVATE_KEY_ID=${FIREBASE_PRIVATE_KEY_ID}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      - FIREBASE_CLIENT_ID=${FIREBASE_CLIENT_ID}
      - FIREBASE_CLIENT_CERT_URL=${FIREBASE_CLIENT_CERT_URL}
      - GROQ_API_KEY=${GROQ_API_KEY:-dummy_key}
      - TZ=America/Bogota
    volumes:
      - ./logs/rag:/app/logs
    networks:
      - academic-network
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-}
      - FIREBASE_PRIVATE_KEY_ID=${FIREBASE_PRIVATE_KEY_ID:-}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY:-}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL:-}
      - FIREBASE_CLIENT_ID=${FIREBASE_CLIENT_ID:-}
      - FIREBASE_CLIENT_CERT_URL=${FIREBASE_CLIENT_CERT_URL:-}
      - LLM_SERVICE_URL=http://rag_service:8000
      - MONGODB_URL=mongodb://mongodb:27017/logs_db
    depends_on:
      mongodb:
        condition: service_healthy
      rag_service:
        condition: service_healthy
    networks:
      - academic-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 45s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile 
    ports:
      - "3000:80"  
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - academic-network
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  academic-network:
    driver: bridge
    name: sistema-academico-red

volumes:
  mongodb_data:
    driver: local